-- Sch√©ma
DROP SCHEMA IF EXISTS projet CASCADE;
CREATE SCHEMA projet AUTHORIZATION projet;
GRANT ALL PRIVILEGES ON SCHEMA projet TO projet;
----
----
----
----
----
----
----
----
 
-- Tables
CREATE TABLE utilisateur (
	id_utilisateur	INT				GENERATED BY DEFAULT AS IDENTITY,
	nom				VARCHAR(50),
	prenom			VARCHAR(50),
	e_mail			VARCHAR(225),
	num_tel			VARCHAR(12),
	date_naissance	DATE,
	login			VARCHAR(50),
	mot_passe		VARCHAR(50),
	CONSTRAINT utilisateur_pkey PRIMARY KEY (id_utilisateur)
);

CREATE TABLE role_benevole (
	nom_role		VARCHAR(50),
	droit			VARCHAR(50),
	CONSTRAINT role_benevole_pkey PRIMARY KEY (nom_role)
);

CREATE TABLE raid (
	id_raid			INT,
	nom_raid		VARCHAR(50),
	annee			DATE,
	prix_insc		DOUBLE PRECISION,
	prix_repas		DOUBLE PRECISION,
	CONSTRAINT raid_pkey PRIMARY KEY (id_raid)
);

CREATE TABLE poste (
	id_poste		INT				GENERATED BY DEFAULT AS IDENTITY,
	id_raid			INT,
	nbr_benev		INT,
	nbr_poste		INT,
	CONSTRAINT poste_pkey PRIMARY KEY (id_poste),
	CONSTRAINT poste_id_raid_fkey FOREIGN KEY (id_raid) REFERENCES raid (id_raid)
);

CREATE TABLE action_benevole (
	id_action		INT				GENERATED BY DEFAULT AS IDENTITY,
	id_poste		INT,
	id_utilisateur	INT,
	panneau_prendre	BOOLEAN,
	descr_action	TEXT,
	signaleur		BOOLEAN,
	horaire_debut	TIME,
	horaire_fin		TIME,
	CONSTRAINT action_benevole_pkey PRIMARY KEY (id_action),
	CONSTRAINT action_benevole_id_poste_fkey FOREIGN KEY (id_poste) REFERENCES poste (id_poste),
	CONSTRAINT action_benevole_id_utilisateur_fkey FOREIGN KEY (id_utilisateur) REFERENCES utilisateur (id_utilisateur)
);

CREATE TABLE benevole (
	id_utilisateur	INT				GENERATED BY DEFAULT AS IDENTITY,
	nom_role		VARCHAR(50),
	possede_permis	BOOLEAN,
	nom				VARCHAR(50),
	prenom			VARCHAR(50),
	e_mail			VARCHAR(255),
	num_tel			VARCHAR(12),
	date_naissance	DATE,
	login			VARCHAR(50)		NOT NULL,
	mot_de_passe	VARCHAR(50)		NOT NULL,
	CONSTRAINT benevole_pkey PRIMARY KEY (id_utilisateur),
	CONSTRAINT benevole_id_utilisateur FOREIGN KEY (id_utilisateur) REFERENCES utilisateur (id_utilisateur),
	CONSTRAINT benevole_nom_role_fkey FOREIGN KEY (nom_role) REFERENCES role_benevole (nom_role)
);

CREATE TABLE categorie_role (
	id_categorie	INT				GENERATED BY DEFAULT AS IDENTITY,
	nom_categorie	VARCHAR(50)		NOT NULL,
	CONSTRAINT categorie_role_pkey	PRIMARY KEY (id_categorie)
);

CREATE TABLE participant (
	id_utilisateur	INT				NOT NULL,
	id_participant	INT				NOT NULL,
	club			VARCHAR(50),
	nom				VARCHAR(50),
	prenom			VARCHAR(50),
	e_mail			VARCHAR(50),
	num_tel			VARCHAR(12),
	date_naissance	DATE,
	login			VARCHAR(50),
	mot_passe		VARCHAR(50),
	CONSTRAINT participant_pkey	PRIMARY KEY (id_utilisateur, id_participant),
	CONSTRAINT participant_id_utilisateur_fkey FOREIGN KEY (id_utilisateur) REFERENCES utilisateur (id_utilisateur)
);

CREATE TABLE participant_duo (
	id_part_duo		INT				GENERATED BY DEFAULT AS IDENTITY,
	id_categorie	INT,
	paiement_valide	BOOLEAN,
	place_class		INT,
	nbr_repas		INT,
	CONSTRAINT participant_duo_pkey PRIMARY KEY (id_part_duo),
	CONSTRAINT participant_duo_id_categorie_fkey FOREIGN KEY (id_categorie) REFERENCES categorie_role (id_categorie)
);

CREATE TABLE forme_duo (
	id_part_duo		INT				GENERATED BY DEFAULT AS IDENTITY,
	id_utilisateur	INT,
	id_participant	INT,
	est_capitaine	BOOLEAN			NOT NULL,
	CONSTRAINT forme_duo_id_part_duo_fkey FOREIGN KEY (id_part_duo) REFERENCES participant_duo (id_part_duo),
	CONSTRAINT forme_duo_id_utilisateur_fkey FOREIGN KEY (id_participant, id_utilisateur) REFERENCES participant (id_participant, id_utilisateur)
);

CREATE TABLE participant_mineur (
	id_utilisateur	INT				NOT NULL,
	id_participant	INT				NOT NULL,
	aut_parentale	BOOLEAN,
	nom				VARCHAR(50),
	prenom			VARCHAR(50),
	e_mail			VARCHAR(225),
	num_tel			VARCHAR(12),
	date_naissance	DATE,
	login			VARCHAR(50),
	mot_passe		VARCHAR(50),
	club			VARCHAR(50),
	CONSTRAINT participant_mineur_pkey PRIMARY KEY (id_utilisateur, id_participant),
	CONSTRAINT participant_mineur_id_utilisateur_fkey FOREIGN KEY (id_utilisateur) REFERENCES utilisateur (id_utilisateur)
);

CREATE TABLE participe_organisation (
	id_raid			INT,
	id_utilisateur	INT,
	nbr_repas_supp	INT,
	CONSTRAINT participe_organisation_id_raid_fkey FOREIGN KEY (id_raid) REFERENCES raid (id_raid),
	CONSTRAINT participe_organisation_id_utilisateur_fkey FOREIGN KEY (id_utilisateur) REFERENCES utilisateur (id_utilisateur)
);

CREATE TABLE participer (
	id_part_duo		INT,
	id_raid			INT,
	CONSTRAINT participer_id_part_duo_fkey FOREIGN KEY (id_part_duo) REFERENCES participant_duo (id_part_duo),
	CONSTRAINT participer_id_raid_fkey FOREIGN KEY (id_raid) REFERENCES raid (id_raid)
);

CREATE TABLE validation_medicale (
	id_validation		INT,
	id_utilisateur		INT,
	id_participant	INT,
	est_valide			BOOLEAN,
	certificat			VARCHAR(50),
	date_certificat		DATE,
	licence_sportive	VARCHAR(50),
	licence_attest		VARCHAR(50),
	date_debut_licence	DATE,
	CONSTRAINT validation_medicale_pkey PRIMARY KEY (id_validation),
	CONSTRAINT validation_medicale_id_utilisateur_fkey FOREIGN KEY (id_participant, id_utilisateur) REFERENCES participant (id_participant, id_utilisateur)
	
);

--
--
--

CREATE TABLE o_compte (
	idcompte		INT				GENERATED BY DEFAULT AS IDENTITY,
	pseudo			VARCHAR(25)		NOT NULL,
	motdepasse		VARCHAR(25) 	NOT NULL,
	email			VARCHAR(100)	NOT NULL,
	PRIMARY KEY (idcompte),
	UNIQUE (pseudo)
);

CREATE TABLE o_role (
	idcompte		INT				NOT NULL,
	role			VARCHAR(20)		NOT NULL,
	CHECK( Role IN ('ADMINISTRATEUR','UTILISATEUR') ),	
	PRIMARY KEY (idcompte, role),
	FOREIGN KEY (idcompte) REFERENCES o_compte (idcompte)
);

CREATE TABLE o_categorie (
	idcategorie		INT				GENERATED BY DEFAULT AS IDENTITY,
	libelle			VARCHAR(25)		NOT NULL,
	PRIMARY KEY (idcategorie)
);

CREATE TABLE o_personne (
	idpersonne		INT				GENERATED BY DEFAULT AS IDENTITY,
	idcategorie		INT				NOT NULL,
	nom				VARCHAR(25)  	NOT NULL,
	prenom			VARCHAR(25) 	NOT NULL,
	PRIMARY KEY (idpersonne),
 	FOREIGN KEY (idcategorie) REFERENCES o_categorie (idcategorie)
);

CREATE TABLE o_telephone (
	idtelephone		INT				GENERATED BY DEFAULT AS IDENTITY,
	idpersonne		INT			 	NOT NULL,
	Libelle			VARCHAR(25)		NOT NULL,
	Numero			VARCHAR(25)		NOT NULL,
	PRIMARY KEY (idtelephone),
	FOREIGN KEY (idpersonne) REFERENCES o_personne (idpersonne)
);

CREATE TABLE o_memo (	
	idmemo 			INT				GENERATED BY DEFAULT AS IDENTITY, 
	titre 			VARCHAR(50)		NOT NULL, 
	description		VARCHAR(1000), 
	flagurgent		BOOLEAN			NOT NULL, 
	statut			SMALLINT		NOT NULL	DEFAULT 0,
	effectif		INT,
	budget			DOUBLE PRECISION,
	echeance		Date,
	idcategorie		INT,
	CHECK( statut BETWEEN 0 AND 2 ),	
	PRIMARY KEY (idmemo),
 	FOREIGN KEY (idcategorie) REFERENCES o_categorie (idcategorie)
);

CREATE TABLE o_concerner (
	idmemo		INT				NOT NULL,
	idpersonne	INT				NOT NULL,
	PRIMARY KEY (idmemo, idpersonne),
	FOREIGN KEY (idmemo) REFERENCES o_memo (idmemo),
	FOREIGN KEY (idpersonne) REFERENCES o_personne (idpersonne)
);

CREATE TABLE o_service (	
	idservice 		INT				GENERATED BY DEFAULT AS IDENTITY, 
	nom 			VARCHAR(50)		NOT NULL, 
	description		VARCHAR(1000), 
	anneecreation	SMALLINT,
	flagsiege		BOOLEAN			NOT NULL, 
	PRIMARY KEY (idservice)
);


-- Vues

CREATE VIEW o_v_compte_avec_roles AS
	SELECT c.*, ARRAY_AGG( r.role ) AS roles
	FROM o_compte c 
	LEFT JOIN o_ROLE r ON c.idcompte = r.idcompte
	GROUP BY c.idcompte;

